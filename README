edit(1)          edit(1)


NAME
        edit - line-by-line text editor

SYNOPSIS
        edit [file]

DESCRIPTION
        This program can be used for editing plain text files.

        To start editing a file, use the command
            
            edit [file]
        
        There are no options.

        These are the commands used while the editor is running:

            p       print out all lines in the file.

            n       print out all lines in the file with line numbers.

            q       quit the program....

            d       delete the current line.

            m[n]    move the current line to be the line before line n.
                    if n is '$', move the current line to be the last line in the file.

            i       begin inserting text before the current line.

            a       begin inserting text after the current line.

            w       write the current buffer to the file.

            s       search the file for the string given in the next prompt.
            
            |[...]  if the command is prefixed by the '|' character, the editor will execute
                    the characters after it as a shell command. The stdin used by the shell
                    command will be the current file buffer. The stdout of the shell command
                    will replace the current file buffer.

        If an entered command is invalid or if the command itself failed, 
        the editor will show '!>' for the next prompt instead of the default '->'.


        If the file to be edited does not contain a newline ('\n') character at the end,
        the editor will append one to the file once the buffer is written with command 'w'.


        The editor supports the creation of new files if the file does not already exist. 
        All files are created with chmod 664.
        Example:

            edit newfile

            In this case, a new file named "newfile" will be created in the current working directory.

        The editor supports the creation of multiple directories if the directories do not already exist.
        All directories are created with chmod 755.
        Example:

            edit newdir/newdir/newdir/newfile

            In this case, three new directories called "newdir" will be created.
            A new file named "newfile" will also be created in the last "newdir" directory.

        The editor supports the use of absolute paths.
        Example:

            edit ~/newfile
            edit /home/username/newfile

            In this case, a new file named "newfile" will be created in the home directory,
            assuming '~' is an alias for '/home/username'

AUTHOR
        Khoa D. Hoang <kdh89@drexel.edu>

